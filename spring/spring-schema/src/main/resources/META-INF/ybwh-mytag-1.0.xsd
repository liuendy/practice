<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns="http://www.ybwh.com/schema/mytag"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:beans="http://www.springframework.org/schema/beans"
	targetNamespace="http://www.ybwh.com/schema/mytag" elementFormDefault="qualified"
	attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" />

	<!-- employee标签,仅包含普通属性 -->
	<xsd:element name="employee">
		<!-- mixed="true"解决标签内有回车空格报错问题 -->
		<xsd:complexType mixed="true">
			<!-- id属性是最好有，否则无法给其他bean引用 -->
			<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
			<xsd:attribute name="num" type="xsd:string"></xsd:attribute>
			<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>


	<!-- department标签，带子标签employee -->
	<xsd:element name="department">
		<xsd:complexType mixed="true">
			<xsd:all>
				<xsd:element ref="employee" minOccurs="1" maxOccurs="1" /> <!-- 这里还可以加其他子标签 -->
			</xsd:all>
			<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
			<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
			<xsd:attribute name="employeeCount" type="xsd:int"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- company标签中带多个department标签 -->
	<xsd:element name="company">
		<xsd:complexType mixed="true">
			<xsd:sequence>
				<xsd:element ref="employee" minOccurs="0" maxOccurs="1" />
				<xsd:element ref="department" minOccurs="1" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="id" type="xsd:ID"></xsd:attribute>
			<xsd:attribute name="name" type="xsd:string"></xsd:attribute>
			<xsd:attribute name="businessLicense" type="xsd:string"></xsd:attribute>
		</xsd:complexType>
	</xsd:element>

	<!-- 以上都是完全自定义标签，都没涉及spring原生标签与自定义标签结合 -->
	<!-- 下面开始自定义标签与原生标签结合，比如spring的property标签用来注入属性就很好用，
		    我们可以用他来给自定义标签注入属性，不用再定义一堆标签属性,还有其他例子 -->

	<xsd:element name="mybean">
		<xsd:complexType mixed="true">  
            <xsd:complexContent>  
                <xsd:extension base="beans:identifiedType">  
                    <xsd:group ref="beans:beanElements" />  
					<xsd:attribute name="class" type="xsd:string"></xsd:attribute>
                </xsd:extension>  
            </xsd:complexContent>  
        </xsd:complexType>
	</xsd:element>
	
	
	





</xsd:schema>  