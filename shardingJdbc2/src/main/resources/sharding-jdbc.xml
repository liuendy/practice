<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sharding="http://shardingsphere.io/schema/shardingjdbc/sharding"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd 
                        http://shardingsphere.io/schema/shardingjdbc/sharding
                        http://shardingsphere.io/schema/shardingjdbc/sharding/sharding.xsd
                        ">

	<bean id="ds-parent">
		<property name="initialSize" value="${druid.initial-size}" />
		<property name="maxActive" value="${druid.max-active}" />
		<property name="minIdle" value="${druid.min-idle}" />
		<property name="maxWait" value="${druid.max-wait}" />
		<property name="poolPreparedStatements" value="${druid.pool-prepared-statements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${druid.max-pool-prepared-statement-per-connection-size}" />
		<property name="maxOpenPreparedStatements" value="${druid.max-open-prepared-statements}" />
		<property name="validationQuery" value="${druid.validation-query}" />
		<property name="testOnBorrow" value="${druid.test-on-borrow}" />
		<property name="testOnReturn" value="${druid.test-on-return}" />
		<property name="testWhileIdle" value="${druid.test-while-idle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${druid.time-between-eviction-runs-millis}" />
		<property name="minEvictableIdleTimeMillis" value="${druid.min-evictable-idle-time-millis}" />
		<property name="filters" value="${druid.filters}" />
	</bean>


	<bean id="ds0" class="com.alibaba.druid.pool.DruidDataSource"
		parent="" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${ds0.driver-class-name}"></property>
		<property name="url" value="${ds0.url}" />
		<property name="username" value="${ds0.username}" />
		<property name="password" value="${ds0.passWord}" />

		<!-- 配置监控统计拦截的filters -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="slf4j-filter" />
			</list>
		</property>
	</bean>


	<!-- 无策略 -->
	<sharding:none-strategy id="noneStrategy" />

	<!-- <sharding:standard-strategy id="databaseStrategy"
		sharding-column="user_id"
		precise-algorithm-class="io.shardingjdbc.spring.algorithm.PreciseModuloDatabaseShardingAlgorithm" /> -->
		
		
	<sharding:standard-strategy id="reportTableStrategy"
		sharding-column="create_time"
		precise-algorithm-class="com.ybwh.springboot2.sharding.DatetimeTablePreciseShardingAlgorithm" />

	<sharding:data-source id="shardingDataSource">
		<sharding:sharding-rule data-source-names="ds0"
			default-data-source-name="ds0" default-database-strategy-ref="noneStrategy"
			default-table-strategy-ref="noneStrategy">

			<!-- 只分表不分库 -->
			<sharding:table-rules>
				<sharding:table-rule logic-table="t_report"
					dynamic="true" database-strategy-ref="noneStrategy"
					table-strategy-ref="reportTableStrategy" />
			</sharding:table-rules>
			
			
			
			
		</sharding:sharding-rule>
		<sharding:props>
			<prop key="sql.show">true</prop>
		</sharding:props>
	</sharding:data-source>





	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!---datasource交给sharding-jdbc托管 -->
		<property name="dataSource" ref="shardingDataSource" />
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
	</bean>


</beans>